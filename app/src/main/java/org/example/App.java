/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Scanner;

public class App {
    public static void main(String[] args) throws InterruptedException {
        Ticket ser = new Ticket();
        String filename = "file.ser";
        ser = deserialze(filename, ser);


        System.out.println("Hellow World");
        Scanner sc = new Scanner(System.in);
        Ticket t = ser; 
        boolean flag = true;
        while(flag){
            System.out.println("1->b\n2->c\n3->a\n4->bt\n5->e");
            int opt = sc.nextInt();
            String name = "";
            int age = -1;
            switch (opt){
                case 1:
                    sc.nextLine();
                    name = sc.nextLine();
                    System.out.println(name);
                    // sc.nextLine();
                    age = sc.nextInt();
                    System.out.println(age);
                    int birthPreference = sc.nextInt();
                    System.out.println(birthPreference);
                    Passenger p = new Passenger(name, age, birthPreference);
                    t.book(p);
                    System.out.println(p.getAlloted());
                    sc.nextLine();
                    break;

                case 2:
                    int id = sc.nextInt();
                    sc.nextLine();
                    name = sc.nextLine();
                    age = sc.nextInt();
                    Passenger pc = new Passenger(id, name, age);
                    t.Cancel(pc);
                case 3:
                    t.Available();
                    break;

                case 4:
                    t.Booked();
                    break;

                case 5:
                    serializer(filename, ser);
                    flag = false;
                    break;
            }
        }
        sc.close();
    }
    private static Ticket deserialze(String filename, Ticket ser) {
        try
        {   
            // Reading the object from a file
            FileInputStream file = new FileInputStream(filename);
            ObjectInputStream in = new ObjectInputStream(file);
             
            // Method for deserialization of object
            ser = (Ticket)in.readObject();
             
            in.close();
            file.close();
             
            System.out.println("Object has been deserialized ");
            ser.Available();
        }
         
        catch(IOException ex)
        {
            System.out.println("IOException is caught");
        }
         
        catch(ClassNotFoundException ex)
        {
            System.out.println("ClassNotFoundException is caught");
        }
		return ser;
	}
	public static void serializer(String filename, Ticket t){

        try
        {   
            //Saving of object in a file
            FileOutputStream file = new FileOutputStream(filename);
            ObjectOutputStream out = new ObjectOutputStream(file);
             
            // Method for serialization of object
            out.writeObject(t);
             
            out.close();
            file.close();
             
            System.out.println("Object has been serialized");
 
        }
         
        catch(IOException ex)
        {
            System.out.println("IOException is caught");
        }

    }
}

